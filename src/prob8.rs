static INT_STR: &'static str = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

/// Return the largest product of digits in `INT_STR` which is `num_digits` long
fn largest_product(num_digits: uint) -> uint {
    let mut largest = 0u;
    for i in range(0, INT_STR.len() - num_digits) {
        let mut slice_value = 1u;
        for j in range(0, num_digits) {
            let index = i + j;
            // Slice out the digit we're looking at and make it a uint
            let digit: uint = from_str(INT_STR.slice(index, index + 1)).unwrap();
            // Optimization - break if digit is 0 as this product will be 0.
            if digit == 0 {
                slice_value = 0;
                break;
            }
            slice_value = slice_value * digit;
        }
        if slice_value > largest {
            largest = slice_value;
        }
    }
    largest
}

#[cfg(test)]
mod test {
    use super::largest_product;

    #[test]
    fn provided_example() {
        assert_eq!(largest_product(4), 5832u)
    }

    #[test]
    fn expected_result() {
        assert_eq!(largest_product(13), 23514624000u)
    }
}
